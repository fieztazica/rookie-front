version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: rookie-store-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - rookie-store-network

  redis:
    image: redis:latest
    container_name: rookie-store-redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis-data:/data
    networks:
      - rookie-store-network

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: rookie-store-api
    ports:
      - "${API_PORT}:3000"
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      REDIS_URL: redis://${REDIS_HOST}:${REDIS_PORT}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./apps/api:/usr/src/app
    networks:
      - rookie-store-network

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: rookie-store-web
    ports:
      - "${WEB_PORT}:3000"
    environment:
      API_URL: http://api:${API_PORT}
    depends_on:
      - api
    volumes:
      - ./apps/web:/usr/src/app
    networks:
      - rookie-store-network

volumes:
  postgres-data:
  redis-data:

networks:
  rookie-store-network:
    driver: bridge
