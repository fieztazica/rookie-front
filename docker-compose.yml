version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: rookie-store-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - rookie-store-network

  redis:
    image: redis:latest
    container_name: rookie-store-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - rookie-store-network

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: rookie-store-api
    ports:
      - "7000:7000"
    env_file:
      - .env
    # environment:
    #   DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    #   REDIS_URL: redis://rookie-store-redis:${REDIS_PORT}
    depends_on:
      - postgres
      - redis
    networks:
      - rookie-store-network
    command: >
      sh -c "
        pnpm run --filter=api prisma db push && pnpm run --filter=api start:prod
      "

  # web:
  #   build:
  #     context: .
  #     dockerfile: apps/web/Dockerfile
  #   container_name: rookie-store-web
  #   ports:
  #     - "${WEB_PORT}:3000"
  #   environment:
  #     API_URL: http://api:${API_PORT}
  #   depends_on:
  #     - api
  #   networks:
  #     - rookie-store-network

volumes:
  postgres-data:
  redis-data:

networks:
  rookie-store-network:
    driver: bridge
